name: Tests

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: francken
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
            - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
             ${{ runner.os }}-composer-

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
             ${{ runner.os }}-node-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, imagick
          coverage: pcov
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-suggest

      - name: Prepare Laravel Application
        run: |
          sudo cp docker/php/imagemagick-policy.xml /etc/ImageMagick-6/policy.xml
          cp .env.ci .env
          php artisan key:generate

      - name: Install NPM dependencies
        run: npm ci

      - name: Compile assets
        run: npm run production

      - name: Migrate and seed
        run: php artisan migrate:fresh --seed
        env:
            DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-clover=build/logs/clover.xml
        env:
            DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Upload coverage results to Coveralls
        env:
            COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            composer global require twinh/php-coveralls
            php-coveralls --coverage_clover=build/logs/clover.xml -v
