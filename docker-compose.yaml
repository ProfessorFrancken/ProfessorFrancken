version: '3'

volumes:
  mysql:
    driver: "local"
  redis:
    driver: "local"

services:
  php-base:
    build:
      dockerfile: Dockerfile-base
      context: ./docker/php
    image: francken/php-base

  npm:
    image: node:14.5
    volumes:
      - ./:/var/www/francken
      - ./docker/volumes/npm/:/var/www/.npm
      - ./docker/volumes/config/:/var/www/.config
    working_dir: /var/www/francken

  php:
    image: francken/v2-php
    build:
      dockerfile: Dockerfile
      context: ./docker/php
      args:
        USER_ID: "${USER_ID:-1000}"
        GROUP_ID: "${GROUP_ID:-1000}"
    user: $USER_ID
    env_file:
      - .docker.env
      - .env
    links:
      - mysql
      - legacy-db
      - redis
      - mailhog
    working_dir: /var/www/francken
    volumes:
      - ./:/var/www/francken
      - ./docker/volumes/config/:/var/www/.config

  scheduler:
    image: francken/v2-scheduler
    build:
      dockerfile: Dockerfile-scheduler
      context: ./docker/php
      args:
        USER_ID: "${USER_ID:-1000}"
        GROUP_ID: "${GROUP_ID:-1000}"
    user: $USER_ID
    env_file:
      - .docker.env
      - .env
    links:
      - legacy-db
      - redis
    working_dir: /var/www/francken
    volumes:
      - ./:/var/www/francken
    restart: always

  queue-worker:
    image: francken/v2-queue
    build:
      dockerfile: Dockerfile-queue
      context: ./docker/php
      args:
        USER_ID: "${USER_ID:-1000}"
        GROUP_ID: "${GROUP_ID:-1000}"
    user: $USER_ID
    env_file:
      - .docker.env
      - .env
    links:
      - legacy-db
      - redis
      - mailhog
    working_dir: /var/www/francken
    volumes:
      - ./:/var/www/francken
    restart: always
    command: php artisan horizon

  nginx:
    build:
      dockerfile: Dockerfile
      context: ./docker/nginx
    image: francken/v2-nginx
    links:
      - php
    volumes:
      - ./docker/nginx/francken.conf:/etc/nginx/conf.d/francken.conf
      - ./:/var/www/francken
    restart: always
    depends_on:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=francken-web"
      - "traefik.frontend.rule=Host:francken.nl.localhost"
      - "traefik.port=80"

  imaginary:
    image: h2non/imaginary
    restart: always
    command: -enable-url-source -mount /mnt/data
    volumes:
      - ./docker/volumes/fly-images/:/mnt/data
    labels:
      - "traefik.enable=true"
      - "traefik.backend=francken-images-web"
      - "traefik.frontend.rule=Host:francken-images.nl.localhost"
      - "traefik.port=9000"

  mailhog:
    image: mailhog/mailhog
    labels:
      - "traefik.enable=true"
      - "traefik.backend=francken-email-web"
      - "traefik.frontend.rule=Host:francken-mail.nl.localhost"
      - "traefik.port=8025"


  adminer:
    image: adminer
    links:
      - mysql
      - legacy-db
    labels:
      - "traefik.enable=true"
      - "traefik.backend=francken-adminer-web"
      - "traefik.frontend.rule=Host:adminer.nl.localhost"
      - "traefik.port=8080"

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: francken
      MYSQL_PASSWORD: leden
      MYSQL_DATABASE: francken
    volumes:
      - mysql:/var/lib/mysql

  legacy-db:
    image: mysql:5.7
    volumes:
      - ./database/francken-db.sql:/docker-entrypoint-initdb.d/dump.sql
    environment:
      - MYSQL_USER=francken
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=francken
    restart: always

  redis:
    image: redis:4-alpine
    ports:
      - 16379:6379
    volumes:
      - redis:/data

  php-coverage:
    image: francken/v2-php-testing
    build:
      dockerfile: Dockerfile-testing
      context: ./docker/php
      args:
        USER_ID: "${USER_ID:-1000}"
        GROUP_ID: "${GROUP_ID:-1000}"
    user: $USER_ID
    env_file:
      - .docker.env
      - .env
    links:
      - mysql
      - legacy-db
      - redis
      - mailhog
    working_dir: /var/www/francken
    volumes:
      - ./:/var/www/francken
      - ./docker/volumes/config/:/var/www/.config

  proxy:
    image: traefik:v1.7.24
    command: --web --docker --docker.domain=docker.localhost --logLevel=DEBUG --docker.exposedbydefault=false
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik/traefik.toml:/traefik.toml
      - ./certs/:/certs/
